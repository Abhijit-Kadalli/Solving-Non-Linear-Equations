#include<iostream>
#include<stdlib.h>
#include<math.h>

using namespace std;

float evalPolynomial(float x, int n, int coeffs[], int powers[]){
    float ret = 0.0;
    for (int i = 0; i < n; i++){
        ret += coeffs[i] * 1.0 * pow(x * 1.0, powers[i] * 1.0);
    }

    return ret;
}

float mathfunction(int a, int b, int n, int coeffs[], int powers[]){
    float ret  = 0.0;

    float m = ((a * 1.0) + (b * 1.0)) / 2.0;

    if (n <= 1){
        cout << "Not a valid linear expression";
        return 0.0;
    }

    float z = evalPolynomial(a, n, coeffs, powers) * evalPolynomial(m, n, coeffs, powers);
    cout << "z is " << z << endl;
    if (evalPolynomial(a, n, coeffs, powers) * evalPolynomial(b, n, coeffs, powers) < 0){

    }

    return ret;
}

int main() {
    int a = 2, b = 1;
    int n;


    cout << "Enter the highest power: ";
    cin >> n;
    n += 1;


    int* coeffs = (int*) malloc(sizeof(int) * n);
    int* powers = (int*) malloc(sizeof(int) * n);

    cout << "Enter each of the coeffs: ";
    for (int i = 0; i < n; i++){
        cin >> coeffs[i];
        powers[i] = n - i - 1;
    }
    mathfunction(a, b, n, coeffs, powers);
}
